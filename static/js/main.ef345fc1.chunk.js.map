{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Footer/index.js","components/Wrapper/index.js","components/Card/index.js","App.js","index.js"],"names":["Navbar","props","className","href","id","gameMessage","currentScore","topScore","Header","Footer","Wrapper","children","styles","pulse","animation","animationName","Radium","keyframes","Card","style","width","value","onClick","clickHandler","alt","name","src","image","height","textAlign","shuffleImages","array","i","length","j","Math","floor","random","App","state","images","clicked","indexOf","handleScore","setState","concat","handleReset","newScore","handleSchuffle","selected","slice","console","log","this","map","key","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef345fc1.chunk.js","sourcesContent":["import React from \"react\";\n// import ReactDOM from 'react-dom';\nimport '../Navbar/style.css';\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nconst Navbar = props => (\n  <div>\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\n      <ul>\n        <li className=\"brand\">\n          <a className=\"navbar-brand\" href=\"/\" id=\"brand\">Philly Click Game</a>\n        </li>\n        <li className='gameMessage'>{props.gameMessage}</li>\n        <li className=\"scoreBoard\">\n          Score:\n          {props.currentScore}\n          <span>      </span>\n          Top Score:\n          {props.topScore}\n        </li>\n      </ul>\n    </nav>\n  </div>\n);\n\n\nexport default Navbar;\n","import React from 'react';\nimport \"../Header/style.css\"\n\nconst Header = () => (\n  <header className='header'>\n    <h1>Philly Clicky!</h1>\n    <h4>Click on an image to score, but don't click an image twice!</h4>\n    <h4>16 Points Wins!</h4>\n  </header>\n);\n\nexport default Header;","import React from 'react';\nimport '../Footer/style.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <div className=\"bottom\">\n      Philly Clicky 2020 --- KPRD\n      </div>\n  </footer>\n)\n\n\nexport default Footer;","import React from 'react';\n\nconst Wrapper = props => <div className='wrapper'>{props.children}</div>;\n\nexport default Wrapper;","import React from 'react';\nimport '../Card/style.css';\nimport { pulse } from 'react-animations';\nimport Radium, { StyleRoot } from 'radium';\n\nconst styles = {\n  pulse: {\n    animation: 'x 2s',\n    animationName: Radium.keyframes(pulse, 'pulse')\n  }\n}\n\nconst Card = props => (\n  <StyleRoot>\n    <div style={styles.pulse}>\n      <div className=\"card\" style={{ width: '10rem' }} value={props.id} onClick={() => props.clickHandler(props.id)} >\n        <img alt={props.name} src={props.image} className=\"card-img-top\" style={{ height: '8rem' }} />\n        <div className=\"card-body\" style={{ textAlign: 'center' }}>\n          <p className=\"card-text\">{props.name}\n          </p>\n        </div>\n      </div>\n    </div>\n  </StyleRoot>\n);\n\n\n\nexport default Card;","import React, { Component } from 'react';\nimport './index';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Wrapper from './components/Wrapper';\nimport images from './images.json'\nimport Card from './components/Card';\n\n\nfunction shuffleImages(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n\n  state = {\n    images: images,\n    gameMessage: \"Click an image to begin!\",\n    topScore: 0,\n    currentScore: 0,\n    clicked: []\n  };\n\n  clickHandler = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleScore();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleScore = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      gameMessage: \"Correct!\"\n    });\n    if (this.state.currentScore === 15) {\n      this.setState({\n        gameMessage: \"You win!\",\n        currentScore: 0,\n      });\n    }\n    else if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    this.handleSchuffle();\n  };\n\n  handleReset = () => {\n\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      gameMessage: \"Incorrect! Game Over!\",\n      clicked: []\n    });\n    this.handleSchuffle();\n  };\n\n  handleSchuffle = () => {\n    let imagesShuffled = shuffleImages(images);\n    let selected = imagesShuffled.slice(0, 24);\n    //log images to make sure only 24 of 32 are selected\n    console.log(selected);\n    this.setState({ images: selected });\n  };\n\n  render() {\n    return (\n      <div>\n        <Wrapper>\n          <Navbar\n            currentScore={this.state.currentScore}\n            topScore={this.state.topScore}\n            gameMessage={this.state.gameMessage}\n          />\n          <Header />\n          <div className='container-fluid'>\n            <div className='row'>\n              {this.state.images.map(image => (\n                <Card\n                  clickHandler={this.clickHandler}\n                  handleScore={this.handleScore}\n                  handleReset={this.handleReset}\n                  handleSchuffle={this.handleSchuffle}\n                  id={image.id}\n                  key={image.id}\n                  name={image.name}\n                  image={image.image}\n                  clicked={image.clicked}\n                />\n              ))}\n            </div>\n          </div>\n        </Wrapper>\n        <Footer />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/index.css'\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}